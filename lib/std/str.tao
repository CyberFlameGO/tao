import "../core/ops.tao"
import "fmt.tao"

#! Utilities for programming with strings.

type Str = [Char]

for B < Show member [Char] of Add B =
    => Output = Str
    => add = fn s, b => s ++ b->show

$[util]
fn codepoint : Char -> Nat = c => @codepoint_char(c)

class FromStr =
    => Err
    => from_str : Str -> Result Self Self.Err

$[util]
def parse A < FromStr : Str -> Result A A.Err = A.from_str

data NatParseError =
    | MissingDigits
    \ NotADigit

member NatParseError of Show =
    => show = fn
        | MissingDigits => "missing digits"
        \ NotADigit => "not a digit"

member Nat of FromStr =
    => Err = NatParseError
    => from_str = fn
        | [] => Err MissingDigits
        \ s => s
            -> map(fn c => "0123456789"->find_index(c))
            -> fold(Ok 0, fn
                | Ok a, Just x => Ok a * 10 + x
                | Err e, _ => Err e
                \ _, _ => Err NotADigit)
